import CuteGlassButton from "@/components/ui/cute-glass-button";
import { ChevronRight, Loader } from "lucide-react";
import { useState } from "react";

import { Button } from "@/components/ui/button";
import {
  HoverCard,
  HoverCardContent,
  HoverCardTrigger,
} from "@/components/ui/hover-card";

export default function RiskFree() {
  const [yieldValue, setYieldValue] = useState("");
  const [error, setError] = useState("");
  const [hasRequested, setHasRequested] = useState(false); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ô‡∏µ‡πâ

  const getRiskFreeRateFromTBMA = () => {
    setHasRequested(true); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß
    setError(""); // ‡∏•‡πâ‡∏≤‡∏á error ‡πÄ‡∏Å‡πà‡∏≤
    setYieldValue(""); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà

    fetch("/api/riskfree")
      .then((res) => res.json())
      .then((json) => {
        console.log("Response JSON:", json);

        if (json.rows && json.rows.length > 0) {
          const value = json.rows[0][7]; // 8th column
          setYieldValue(value);
        } else {
          setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        }
      })
      .catch((err) => {
        console.error("Fetch error:", err);
        setError("‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      });
  };

  return (
    <div className="p-4 flex gap-4 items-center">
      <div className="max-w-max">
        <CuteGlassButton
          onClick={getRiskFreeRateFromTBMA}
          textColorFrom="#a67bf5"
          textColorTo="#1ca2e9"
          text="‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡πà‡∏≠‡∏¢"
          iconBefore="ü™Ñ"
          iconAfter={ChevronRight}
          iconAnimation=""
        />
      </div>

      {hasRequested && (
        <>
          {error ? (
            <p className="text-red-500">{error}</p>
          ) : yieldValue ? (
            <p className="text-indigo-500 text-lg font-bold">
              <HoverCard>
                <HoverCardTrigger asChild>
                  <Button variant="link">
                    ‚ö° {parseFloat(yieldValue).toFixed(2)} %
                  </Button>
                </HoverCardTrigger>
                <HoverCardContent className="w-80">
                  <div className="flex justify-between gap-4">
                    <div className="space-y-1">
                      <h4 className="text-sm font-semibold">‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?</h4>
                      <p className="text-sm">
                        ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
                        <br/>
                        ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô<br/>
                        ‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏≤‡∏Å ThaiBMA Short-term <br/> Government Bond Index
                      </p>
                      <div className="text-muted-foreground text-xs">
                        https://www.thaibma.or.th/EN/Market/Index/<br/>
                        ShortTermIndex.aspx
                      </div>
                    </div>
                  </div>
                </HoverCardContent>
              </HoverCard>
            </p>
          ) : (
            <div className="text-gray-400 flex gap-1 items-center">
              <Loader size={16} className="animate-spin" />
              <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
            </div>
          )}
        </>
      )}
    </div>
  );
}
